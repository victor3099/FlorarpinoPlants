{"version":3,"file":"index.modern.mjs","sources":["../src/libraries/google-maps-api-loader.ts","../src/components/api-provider.tsx","../src/hooks/use-api-loading-status.ts","../src/hooks/use-api-is-loaded.ts","../src/libraries/errors.ts","../src/libraries/use-callback-ref.tsx","../src/components/map/use-internal-camera-state.ts","../src/components/map/use-map-events.ts","../src/libraries/is-lat-lng-literal.ts","../src/components/map/use-map-options.ts","../src/components/map/use-deckgl-camera-update.ts","../src/components/map/index.tsx","../src/hooks/use-maps-library.ts","../src/components/advanced-marker.tsx","../src/components/info-window.tsx","../src/hooks/use-map.ts","../src/components/map-control.tsx","../src/components/marker.tsx","../src/components/pin.tsx","../src/hooks/autocomplete.ts","../src/libraries/assert-not-null.ts","../src/hooks/directions-service.ts","../src/hooks/street-view-panorama.ts","../src/libraries/limit-tilt-range.ts"],"sourcesContent":["export type ApiParams = {\n  key: string;\n  v?: string;\n  language?: string;\n  region?: string;\n  libraries?: string;\n  solutionChannel?: string;\n  authReferrerPolicy?: string;\n};\n\n// Declare global maps callback function\ndeclare global {\n  interface Window {\n    __googleMapsCallback__?: () => void;\n    __googleMapsApiParams__?: string;\n  }\n}\n\nconst MAPS_API_BASE_URL = 'https://maps.googleapis.com/maps/api/js';\n\n/**\n * A GoogleMapsApiLoader to reliably load and unload the Google Maps JavaScript API.\n *\n * The actual loading and unloading is delayed into the microtask queue, to\n * allow using the API in an useEffect hook, without worrying about multiple API loads.\n */\nexport class GoogleMapsApiLoader {\n  /**\n   * Loads the Google Maps API with the specified parameters.\n   * Since the maps library can only be loaded once per page, this will\n   * produce a warning when called multiple times with different\n   * parameters.\n   *\n   * The returned promise resolves when loading completes\n   * and rejects in case of an error or when the loading was aborted.\n   * @param params\n   */\n  static async load(params: ApiParams): Promise<void> {\n    const libraries = params.libraries ? params.libraries.split(',') : [];\n    const serializedParams = this.serializeParams(params);\n\n    if (!window.google?.maps?.importLibrary) {\n      window.__googleMapsApiParams__ = serializedParams;\n      this.initImportLibrary(params);\n    }\n\n    if (\n      window.__googleMapsApiParams__ &&\n      window.__googleMapsApiParams__ !== serializedParams\n    ) {\n      console.warn(\n        `The maps API has already been loaded with different ` +\n          `parameters and will not be loaded again. Refresh the page for ` +\n          `new values to have effect.`\n      );\n    }\n\n    for (const lib of ['maps', ...libraries]) {\n      await google.maps.importLibrary(lib);\n    }\n  }\n\n  private static serializeParams(params: ApiParams): string {\n    return [\n      params.v,\n      params.key,\n      params.language,\n      params.region,\n      params.authReferrerPolicy,\n      params.solutionChannel\n    ].join('/');\n  }\n\n  private static initImportLibrary(params: ApiParams) {\n    if (!window.google) window.google = {} as never;\n    if (!window.google.maps) window.google.maps = {} as never;\n\n    if (window.google.maps['importLibrary']) {\n      console.warn('initImportLibrary can only be called once.', params);\n\n      return;\n    }\n\n    let apiPromise: Promise<void> | null = null;\n\n    const loadApi = (library: string) => {\n      if (apiPromise) return apiPromise;\n\n      apiPromise = new Promise((resolve, reject) => {\n        const scriptElement = document.createElement('script');\n        const urlParams = new URLSearchParams();\n\n        for (const [key, value] of Object.entries(params)) {\n          const urlParamName = key.replace(\n            /[A-Z]/g,\n            t => '_' + t[0].toLowerCase()\n          );\n          urlParams.set(urlParamName, value);\n        }\n        urlParams.set('libraries', library);\n        urlParams.set('callback', '__googleMapsCallback__');\n        scriptElement.src = MAPS_API_BASE_URL + `?` + urlParams.toString();\n\n        window.__googleMapsCallback__ = resolve;\n\n        scriptElement.onerror = () =>\n          reject(new Error('The Google Maps JavaScript API could not load.'));\n        scriptElement.nonce =\n          (document.querySelector('script[nonce]') as HTMLScriptElement)\n            ?.nonce || '';\n\n        document.head.append(scriptElement);\n      });\n\n      return apiPromise;\n    };\n\n    // for the first load we declare an importLibrary function that will\n    // be overwritten once the api is loaded.\n    google.maps.importLibrary = libraryName =>\n      loadApi(libraryName).then(() => google.maps.importLibrary(libraryName));\n  }\n}\n","import React, {\n  PropsWithChildren,\n  ReactElement,\n  useCallback,\n  useEffect,\n  useMemo,\n  useReducer,\n  useState\n} from 'react';\n\nimport {GoogleMapsApiLoader} from '../libraries/google-maps-api-loader';\n\nexport enum APILoadingStatus {\n  NOT_LOADED = 'NOT_LOADED',\n  LOADING = 'LOADING',\n  LOADED = 'LOADED',\n  FAILED = 'FAILED'\n}\n\nconst {NOT_LOADED, LOADING, LOADED, FAILED} = APILoadingStatus;\n\ntype ImportLibraryFunction = typeof google.maps.importLibrary;\ntype GoogleMapsLibrary = Awaited<ReturnType<ImportLibraryFunction>>;\ntype LoadedLibraries = {[name: string]: GoogleMapsLibrary};\n\nexport interface APIProviderContextValue {\n  status: APILoadingStatus;\n  loadedLibraries: LoadedLibraries;\n  importLibrary: typeof google.maps.importLibrary;\n  mapInstances: Record<string, google.maps.Map>;\n  addMapInstance: (map: google.maps.Map, id?: string) => void;\n  removeMapInstance: (id?: string) => void;\n  clearMapInstances: () => void;\n}\n\nexport const APIProviderContext =\n  React.createContext<APIProviderContextValue | null>(null);\n\nexport type APIProviderProps = {\n  /**\n   * apiKey must be provided to load the Google Maps JavaScript API. To create an API key, see: https://developers.google.com/maps/documentation/javascript/get-api-key\n   * Part of:\n   */\n  apiKey: string;\n  /**\n   * A custom id to reference the script tag can be provided. The default is set to 'google-maps-api'\n   * @default 'google-maps-api'\n   */\n  libraries?: Array<string>;\n  /**\n   * A specific version of the Google Maps JavaScript API can be used.\n   * Read more about versioning: https://developers.google.com/maps/documentation/javascript/versions\n   * Part of: https://developers.google.com/maps/documentation/javascript/url-params\n   */\n  version?: string;\n  /**\n   * Sets the map to a specific region.\n   * Read more about localizing the Map: https://developers.google.com/maps/documentation/javascript/localization\n   * Part of: https://developers.google.com/maps/documentation/javascript/url-params\n   */\n  region?: string;\n  /**\n   * Use a specific language for the map.\n   * Read more about localizing the Map: https://developers.google.com/maps/documentation/javascript/localization\n   * Part of: https://developers.google.com/maps/documentation/javascript/url-params\n   */\n  language?: string;\n  /**\n   * auth_referrer_policy can be set to 'origin'.\n   * Part of: https://developers.google.com/maps/documentation/javascript/url-params\n   */\n  authReferrerPolicy?: string;\n  /**\n   * A function that can be used to execute code after the Google Maps JavaScript API has been loaded.\n   */\n  onLoad?: () => void;\n};\n\n/**\n * local hook to manage access to map-instances.\n */\nfunction useMapInstances() {\n  const [mapInstances, setMapInstances] = useState<\n    Record<string, google.maps.Map>\n  >({});\n\n  const addMapInstance = (mapInstance: google.maps.Map, id = 'default') => {\n    setMapInstances(instances => ({...instances, [id]: mapInstance}));\n  };\n\n  const removeMapInstance = (id = 'default') => {\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    setMapInstances(({[id]: _, ...remaining}) => remaining);\n  };\n\n  const clearMapInstances = () => {\n    setMapInstances({});\n  };\n\n  return {mapInstances, addMapInstance, removeMapInstance, clearMapInstances};\n}\n\n/**\n * local hook to handle the loading of the maps API, returns the current loading status\n * @param props\n */\nfunction useGoogleMapsApiLoader(props: APIProviderProps) {\n  const {onLoad, apiKey, libraries = [], ...otherApiParams} = props;\n\n  const [status, setStatus] = useState<APILoadingStatus>(NOT_LOADED);\n  const [loadedLibraries, addLoadedLibrary] = useReducer(\n    (\n      loadedLibraries: LoadedLibraries,\n      action: {name: keyof LoadedLibraries; value: LoadedLibraries[string]}\n    ) => {\n      return {...loadedLibraries, [action.name]: action.value};\n    },\n    {}\n  );\n\n  const librariesString = useMemo(() => libraries?.join(','), [libraries]);\n  const serializedParams = useMemo(\n    () => JSON.stringify(otherApiParams),\n    [otherApiParams]\n  );\n\n  const importLibrary: typeof google.maps.importLibrary = useCallback(\n    async (name: string) => {\n      if (loadedLibraries[name]) {\n        return loadedLibraries[name];\n      }\n\n      if (!google?.maps?.importLibrary) {\n        throw new Error(\n          '[api-provider-internal] importLibrary was called before ' +\n            'google.maps.importLibrary was defined.'\n        );\n      }\n\n      const res = await window.google.maps.importLibrary(name);\n      addLoadedLibrary({name, value: res});\n\n      return res;\n    },\n    [loadedLibraries]\n  );\n\n  useEffect(\n    () => {\n      setStatus(LOADING);\n\n      (async () => {\n        try {\n          await GoogleMapsApiLoader.load({\n            key: apiKey,\n            libraries: librariesString,\n            ...otherApiParams\n          });\n\n          setStatus(LOADED);\n\n          for (const name of ['core', 'maps', ...libraries]) {\n            await importLibrary(name);\n          }\n\n          if (onLoad) {\n            onLoad();\n          }\n        } catch (error) {\n          console.error('<ApiProvider> failed to load Google Maps API', error);\n          setStatus(FAILED);\n        }\n      })();\n    },\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    [apiKey, librariesString, serializedParams]\n  );\n\n  return {\n    status,\n    loadedLibraries,\n    importLibrary\n  };\n}\n\n/**\n * Component to wrap the Google Maps React components and load the Google Maps JavaScript API\n */\nexport const APIProvider = (\n  props: PropsWithChildren<APIProviderProps>\n): ReactElement | null => {\n  const {children, ...loaderProps} = props;\n  const {mapInstances, addMapInstance, removeMapInstance, clearMapInstances} =\n    useMapInstances();\n\n  const {status, loadedLibraries, importLibrary} =\n    useGoogleMapsApiLoader(loaderProps);\n\n  return (\n    <APIProviderContext.Provider\n      value={{\n        mapInstances,\n        addMapInstance,\n        removeMapInstance,\n        clearMapInstances,\n        status,\n        loadedLibraries,\n        importLibrary\n      }}>\n      {children}\n    </APIProviderContext.Provider>\n  );\n};\n","import {useContext} from 'react';\nimport {APILoadingStatus, APIProviderContext} from '../components/api-provider';\n\nexport function useApiLoadingStatus(): APILoadingStatus {\n  return useContext(APIProviderContext)?.status || APILoadingStatus.NOT_LOADED;\n}\n","import {APILoadingStatus} from '../components/api-provider';\nimport {useApiLoadingStatus} from './use-api-loading-status';\n/**\n * Hook to check if the Google Maps API is loaded\n */\nexport function useApiIsLoaded(): boolean {\n  const status = useApiLoadingStatus();\n\n  return status === APILoadingStatus.LOADED;\n}\n","const shownMessages = new Set();\n\nexport function logErrorOnce(...args: Parameters<typeof console.error>) {\n  const key = JSON.stringify(args);\n\n  if (!shownMessages.has(key)) {\n    shownMessages.add(key);\n\n    console.error(...args);\n  }\n}\n","import {Ref, useCallback, useState} from 'react';\n\nexport function useCallbackRef<T>() {\n  const [el, setEl] = useState<T | null>(null);\n  const ref = useCallback((value: T) => setEl(value), [setEl]);\n\n  return [el, ref as Ref<T>] as const;\n}\n","import {MutableRefObject, useRef} from 'react';\nimport {MapCameraChangedEvent, MapEvent} from './use-map-events';\n\nexport type InternalCameraState = {\n  center: google.maps.LatLngLiteral;\n  heading: number;\n  tilt: number;\n  zoom: number;\n};\n\nexport type InternalCameraStateRef = MutableRefObject<InternalCameraState>;\n\n/**\n * Creates a mutable ref object to track the last known state of the map camera.\n * This is updated by `trackDispatchedEvent` and used in `useMapOptions`.\n */\nexport function useInternalCameraState(): InternalCameraStateRef {\n  return useRef<InternalCameraState>({\n    center: {lat: 0, lng: 0},\n    heading: 0,\n    tilt: 0,\n    zoom: 0\n  });\n}\n\n/**\n * Records camera data from the last event dispatched to the React application\n * in a mutable `IternalCameraStateRef`.\n * This data can then be used to prevent feeding these values back to the\n * map-instance when a typical \"controlled component\" setup (state variable is\n * fed into and updated by the map).\n */\nexport function trackDispatchedEvent(\n  ev: MapEvent,\n  cameraStateRef: InternalCameraStateRef\n) {\n  const cameraEvent = ev as MapCameraChangedEvent;\n\n  // we're only interested in the camera-events here\n  if (!cameraEvent.detail.center) return;\n  const {center, zoom, heading, tilt} = cameraEvent.detail;\n\n  cameraStateRef.current.center = center;\n  cameraStateRef.current.heading = heading;\n  cameraStateRef.current.tilt = tilt;\n  cameraStateRef.current.zoom = zoom;\n}\n","import {useEffect} from 'react';\nimport {\n  InternalCameraStateRef,\n  trackDispatchedEvent\n} from './use-internal-camera-state';\n\n/**\n * Handlers for all events that could be emitted by map-instances.\n */\nexport type MapEventProps = Partial<{\n  // map view state events\n  onBoundsChanged: (event: MapCameraChangedEvent) => void;\n  onCenterChanged: (event: MapCameraChangedEvent) => void;\n  onHeadingChanged: (event: MapCameraChangedEvent) => void;\n  onTiltChanged: (event: MapCameraChangedEvent) => void;\n  onZoomChanged: (event: MapCameraChangedEvent) => void;\n  onProjectionChanged: (event: MapCameraChangedEvent) => void;\n\n  // mouse / touch / pointer events\n  onClick: (event: MapMouseEvent) => void;\n  onDblclick: (event: MapMouseEvent) => void;\n  onContextmenu: (event: MapMouseEvent) => void;\n  onMousemove: (event: MapMouseEvent) => void;\n  onMouseover: (event: MapMouseEvent) => void;\n  onMouseout: (event: MapMouseEvent) => void;\n  onDrag: (event: MapEvent) => void;\n  onDragend: (event: MapEvent) => void;\n  onDragstart: (event: MapEvent) => void;\n\n  // loading events\n  onTilesLoaded: (event: MapEvent) => void;\n  onIdle: (event: MapEvent) => void;\n\n  // configuration events\n  onIsFractionalZoomEnabledChanged: (event: MapEvent) => void;\n  onMapCapabilitiesChanged: (event: MapEvent) => void;\n  onMapTypeIdChanged: (event: MapEvent) => void;\n  onRenderingTypeChanged: (event: MapEvent) => void;\n}>;\n\n/**\n * Sets up effects to bind event-handlers for all event-props in MapEventProps.\n * @internal\n */\nexport function useMapEvents(\n  map: google.maps.Map | null,\n  cameraStateRef: InternalCameraStateRef,\n  props: MapEventProps\n) {\n  // note: calling a useEffect hook from within a loop is prohibited by the\n  // rules of hooks, but it's ok here since it's unconditional and the number\n  // and order of iterations is always strictly the same.\n  // (see https://legacy.reactjs.org/docs/hooks-rules.html)\n\n  for (const propName of eventPropNames) {\n    // fixme: this cast is essentially a 'trust me, bro' for typescript, but\n    //   a proper solution seems way too complicated right now\n    const handler = props[propName] as (ev: MapEvent) => void;\n    const eventType = propNameToEventType[propName];\n\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    useEffect(() => {\n      if (!map) return;\n      if (!handler) return;\n\n      const listener = map.addListener(\n        eventType,\n        (ev?: google.maps.MapMouseEvent | google.maps.IconMouseEvent) => {\n          const mapEvent = createMapEvent(eventType, map, ev);\n\n          trackDispatchedEvent(mapEvent, cameraStateRef);\n          handler(mapEvent);\n        }\n      );\n\n      return () => listener.remove();\n    }, [map, cameraStateRef, eventType, handler]);\n  }\n}\n\n/**\n * Create the wrapped map-events used for the event-props.\n * @param type the event type as it is specified to the maps api\n * @param map the map instance the event originates from\n * @param srcEvent the source-event if there is one.\n */\nfunction createMapEvent(\n  type: string,\n  map: google.maps.Map,\n  srcEvent?: google.maps.MapMouseEvent | google.maps.IconMouseEvent\n): MapEvent {\n  const ev: MapEvent = {\n    type,\n    map,\n    detail: {},\n    stoppable: false,\n    stop: () => {}\n  };\n\n  if (cameraEventTypes.includes(type)) {\n    const camEvent = ev as MapCameraChangedEvent;\n\n    const center = map.getCenter();\n    const zoom = map.getZoom();\n    const heading = map.getHeading() || 0;\n    const tilt = map.getTilt() || 0;\n    const bounds = map.getBounds();\n\n    if (!center || !bounds || !Number.isFinite(zoom)) {\n      console.warn(\n        '[createEvent] at least one of the values from the map ' +\n          'returned undefined. This is not expected to happen. Please ' +\n          'report an issue at https://github.com/visgl/react-google-maps/issues/new'\n      );\n    }\n\n    camEvent.detail = {\n      center: center?.toJSON() || {lat: 0, lng: 0},\n      zoom: zoom as number,\n      heading: heading as number,\n      tilt: tilt as number,\n      bounds: bounds?.toJSON() || {\n        north: 90,\n        east: 180,\n        south: -90,\n        west: -180\n      }\n    };\n\n    return camEvent;\n  } else if (mouseEventTypes.includes(type)) {\n    if (!srcEvent)\n      throw new Error('[createEvent] mouse events must provide a srcEvent');\n    const mouseEvent = ev as MapMouseEvent;\n\n    mouseEvent.domEvent = srcEvent.domEvent;\n    mouseEvent.stoppable = true;\n    mouseEvent.stop = () => srcEvent.stop();\n\n    mouseEvent.detail = {\n      latLng: srcEvent.latLng?.toJSON() || null,\n      placeId: (srcEvent as google.maps.IconMouseEvent).placeId\n    };\n\n    return mouseEvent;\n  }\n\n  return ev;\n}\n\n/**\n * maps the camelCased names of event-props to the corresponding event-types\n * used in the maps API.\n */\nconst propNameToEventType: {[prop in keyof Required<MapEventProps>]: string} = {\n  onBoundsChanged: 'bounds_changed',\n  onCenterChanged: 'center_changed',\n  onClick: 'click',\n  onContextmenu: 'contextmenu',\n  onDblclick: 'dblclick',\n  onDrag: 'drag',\n  onDragend: 'dragend',\n  onDragstart: 'dragstart',\n  onHeadingChanged: 'heading_changed',\n  onIdle: 'idle',\n  onIsFractionalZoomEnabledChanged: 'isfractionalzoomenabled_changed',\n  onMapCapabilitiesChanged: 'mapcapabilities_changed',\n  onMapTypeIdChanged: 'maptypeid_changed',\n  onMousemove: 'mousemove',\n  onMouseout: 'mouseout',\n  onMouseover: 'mouseover',\n  onProjectionChanged: 'projection_changed',\n  onRenderingTypeChanged: 'renderingtype_changed',\n  onTilesLoaded: 'tilesloaded',\n  onTiltChanged: 'tilt_changed',\n  onZoomChanged: 'zoom_changed'\n} as const;\n\nconst cameraEventTypes = [\n  'bounds_changed',\n  'center_changed',\n  'heading_changed',\n  'projection_changed',\n  'tilt_changed',\n  'zoom_changed'\n];\n\nconst mouseEventTypes = [\n  'click',\n  'contextmenu',\n  'dblclick',\n  'mousemove',\n  'mouseout',\n  'mouseover'\n];\n\ntype MapEventPropName = keyof MapEventProps;\nconst eventPropNames = Object.keys(propNameToEventType) as MapEventPropName[];\n\nexport type MapEvent<T = unknown> = {\n  type: string;\n  map: google.maps.Map;\n  detail: T;\n\n  stoppable: boolean;\n  stop: () => void;\n  domEvent?: MouseEvent | TouchEvent | PointerEvent | KeyboardEvent | Event;\n};\n\nexport type MapMouseEvent = MapEvent<{\n  latLng: google.maps.LatLngLiteral | null;\n  placeId: string | null;\n}>;\n\nexport type MapCameraChangedEvent = MapEvent<{\n  center: google.maps.LatLngLiteral;\n  bounds: google.maps.LatLngBoundsLiteral;\n  zoom: number;\n  heading: number;\n  tilt: number;\n}>;\n","export function isLatLngLiteral(\n  obj: unknown\n): obj is google.maps.LatLngLiteral {\n  if (!obj || typeof obj !== 'object') return false;\n  if (!('lat' in obj && 'lng' in obj)) return false;\n\n  return Number.isFinite(obj.lat) && Number.isFinite(obj.lng);\n}\n","import {useEffect, useLayoutEffect} from 'react';\nimport {MapProps} from '@vis.gl/react-google-maps';\nimport {InternalCameraStateRef} from './use-internal-camera-state';\nimport {isLatLngLiteral} from '../../libraries/is-lat-lng-literal';\n\n/**\n * Internal hook to update the map-options and camera parameters when\n * props are changed.\n *\n * @param map the map instance\n * @param cameraStateRef stores the last values seen during dispatch into the\n * react-application in useMapEvents(). We can safely assume that we\n * don't need to feed these values back into the map.\n * @param mapProps the props to update the map-instance with\n * @internal\n */\nexport function useMapOptions(\n  map: google.maps.Map | null,\n  cameraStateRef: InternalCameraStateRef,\n  mapProps: MapProps\n) {\n  const {center: rawCenter, zoom, heading, tilt, ...mapOptions} = mapProps;\n  const center = rawCenter\n    ? isLatLngLiteral(rawCenter)\n      ? rawCenter\n      : rawCenter.toJSON()\n    : null;\n  const lat = center && center.lat;\n  const lng = center && center.lng;\n\n  /* eslint-disable react-hooks/exhaustive-deps --\n   *\n   * The following effects aren't triggered when the map is changed.\n   * In that case, the values will be or have been passed to the map\n   * constructor as mapOptions.\n   */\n\n  // update the map options when mapOptions is changed\n  // Note: due to the destructuring above, mapOptions will be seen as changed\n  //   with every re-render, so we're boldly assuming the maps-api will properly\n  //   deal with unchanged option-values passed into setOptions.\n  useEffect(() => {\n    if (!map) return;\n\n    // Changing the mapId via setOptions will trigger an error-message.\n    // We will re-create the map-instance in that case anyway, so we\n    // remove it here to avoid this error-message.\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    const {mapId, ...opts} = mapOptions;\n    map.setOptions(opts);\n  }, [mapOptions]);\n\n  useLayoutEffect(() => {\n    if (!map || !Number.isFinite(lat) || !Number.isFinite(lng)) return;\n    if (\n      cameraStateRef.current.center.lat === lat &&\n      cameraStateRef.current.center.lng === lng\n    )\n      return;\n\n    map.moveCamera({center: {lat: lat as number, lng: lng as number}});\n  }, [lat, lng]);\n\n  useLayoutEffect(() => {\n    if (!map || !Number.isFinite(zoom)) return;\n    if (cameraStateRef.current.zoom === zoom) return;\n\n    map.moveCamera({zoom: zoom as number});\n  }, [zoom]);\n\n  useLayoutEffect(() => {\n    if (!map || !Number.isFinite(heading)) return;\n    if (cameraStateRef.current.heading === heading) return;\n\n    map.moveCamera({heading: heading as number});\n  }, [heading]);\n\n  useLayoutEffect(() => {\n    if (!map || !Number.isFinite(tilt)) return;\n    if (cameraStateRef.current.tilt === tilt) return;\n\n    map.moveCamera({tilt: tilt as number});\n  }, [tilt]);\n  /* eslint-enable react-hooks/exhaustive-deps */\n}\n","import {useLayoutEffect} from 'react';\n\n/**\n * Internal hook that updates the camera when deck.gl viewState changes.\n * @internal\n */\nexport function useDeckGLCameraUpdate(\n  map: google.maps.Map | null,\n  viewState: Record<string, unknown> | undefined\n) {\n  useLayoutEffect(() => {\n    if (!map || !viewState) {\n      return;\n    }\n\n    // FIXME: this should probably be extracted into a seperate hook that only\n    //  runs once when first seeing a deck.gl viewState update and resets\n    //  again. Maybe even use a seperate prop (`<Map controlled />`) instead.\n    map.setOptions({\n      gestureHandling: 'none',\n      keyboardShortcuts: false,\n      disableDefaultUI: true\n    });\n\n    const {\n      latitude,\n      longitude,\n      bearing: heading,\n      pitch: tilt,\n      zoom\n    } = viewState as Record<string, number>;\n\n    map.moveCamera({\n      center: {lat: latitude, lng: longitude},\n      heading,\n      tilt,\n      zoom: zoom + 1\n    });\n  }, [map, viewState]);\n}\n","/* eslint-disable complexity */\nimport React, {\n  CSSProperties,\n  PropsWithChildren,\n  Ref,\n  useContext,\n  useEffect,\n  useMemo,\n  useState\n} from 'react';\n\nimport {APIProviderContext, APIProviderContextValue} from '../api-provider';\n\nimport {useApiIsLoaded} from '../../hooks/use-api-is-loaded';\nimport {logErrorOnce} from '../../libraries/errors';\nimport {useCallbackRef} from '../../libraries/use-callback-ref';\nimport {MapEventProps, useMapEvents} from './use-map-events';\nimport {useMapOptions} from './use-map-options';\nimport {useDeckGLCameraUpdate} from './use-deckgl-camera-update';\nimport {useInternalCameraState} from './use-internal-camera-state';\n\nexport interface GoogleMapsContextValue {\n  map: google.maps.Map | null;\n}\nexport const GoogleMapsContext =\n  React.createContext<GoogleMapsContextValue | null>(null);\n\n/**\n * Props for the Google Maps Map Component\n */\nexport type MapProps = google.maps.MapOptions &\n  MapEventProps & {\n    style?: CSSProperties;\n    /**\n     * Adds custom style to the map by passing a css class.\n     */\n    className?: string;\n    /**\n     * Adds initial bounds to the map as an alternative to specifying the center/zoom of the map.\n     * Calls the fitBounds method internally https://developers.google.com/maps/documentation/javascript/reference/map?hl=en#Map-Methods\n     */\n    initialBounds?: google.maps.LatLngBounds | google.maps.LatLngBoundsLiteral;\n    /**\n     * An id that is added to the map. Needed when using more than one Map component.\n     * This is also needed to reference the map inside the useMap hook.\n     */\n    id?: string;\n    /**\n     * Viewport from deck.gl\n     */\n    viewport?: unknown;\n    /**\n     * View state from deck.gl\n     */\n    viewState?: Record<string, unknown>;\n    /**\n     * Initial View State from deck.gl\n     */\n    initialViewState?: Record<string, unknown>;\n  };\n\n/**\n * Component to render a Google Maps map\n */\nexport const Map = (props: PropsWithChildren<MapProps>) => {\n  const {children, id, className, style, viewState, viewport} = props;\n\n  const context = useContext(APIProviderContext);\n\n  if (!context) {\n    throw new Error(\n      '<Map> can only be used inside an <ApiProvider> component.'\n    );\n  }\n\n  const [map, mapRef] = useMapInstance(props, context);\n  const cameraStateRef = useInternalCameraState();\n  useMapOptions(map, cameraStateRef, props);\n  useMapEvents(map, cameraStateRef, props);\n  useDeckGLCameraUpdate(map, viewState);\n\n  const isViewportSet = useMemo(() => Boolean(viewport), [viewport]);\n  const combinedStyle: CSSProperties = useMemo(\n    () => ({\n      width: '100%',\n      height: '100%',\n\n      // when using deckgl, the map should be sent to the back\n      zIndex: isViewportSet ? -1 : 0,\n      ...style\n    }),\n    [style, isViewportSet]\n  );\n\n  return (\n    <div\n      ref={mapRef}\n      data-testid={'map'}\n      style={className ? undefined : combinedStyle}\n      className={className}\n      {...(id ? {id} : {})}>\n      {map ? (\n        <GoogleMapsContext.Provider value={{map}}>\n          {children}\n        </GoogleMapsContext.Provider>\n      ) : null}\n    </div>\n  );\n};\nMap.deckGLViewProps = true;\n\n/**\n * The main hook takes care of creating map-instances and registering them in\n * the api-provider context.\n * @return a tuple of the map-instance created (or null) and the callback\n *   ref that will be used to pass the map-container into this hook.\n * @internal\n */\nfunction useMapInstance(\n  props: MapProps,\n  context: APIProviderContextValue\n): readonly [map: google.maps.Map | null, containerRef: Ref<HTMLDivElement>] {\n  const apiIsLoaded = useApiIsLoaded();\n  const [map, setMap] = useState<google.maps.Map | null>(null);\n  const [container, containerRef] = useCallbackRef<HTMLDivElement>();\n\n  const {\n    id,\n    initialBounds,\n\n    ...mapOptions\n  } = props;\n\n  // create the map instance and register it in the context\n  useEffect(\n    () => {\n      if (!container || !apiIsLoaded) return;\n\n      const {addMapInstance, removeMapInstance} = context;\n      const newMap = new google.maps.Map(container, mapOptions);\n      setMap(newMap);\n      addMapInstance(newMap, id);\n\n      if (initialBounds) {\n        newMap.fitBounds(initialBounds);\n      }\n\n      return () => {\n        if (!container || !apiIsLoaded) return;\n\n        // remove all event-listeners to minimize memory-leaks\n        google.maps.event.clearInstanceListeners(newMap);\n\n        setMap(null);\n        removeMapInstance(id);\n      };\n    },\n\n    // FIXME: we should rethink if it could be possible to keep the state\n    //   around when a map gets re-initialized (id or mapId changed). This\n    //   should keep the viewport as it is (so also no initial viewport in\n    //   this case) and any added features should of course get re-added as\n    //   well.\n\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    [id, container, apiIsLoaded, props.mapId]\n  );\n\n  // report an error if the same map-id is used multiple times\n  useEffect(() => {\n    if (!id) return;\n\n    const {mapInstances} = context;\n\n    if (mapInstances[id] && mapInstances[id] !== map) {\n      logErrorOnce(\n        `The map id '${id}' seems to have been used multiple times. ` +\n          'This can lead to unexpected problems when accessing the maps. ' +\n          'Please use unique ids for all <Map> components.'\n      );\n    }\n  }, [id, context, map]);\n\n  return [map, containerRef] as const;\n}\n","import {useContext, useEffect} from 'react';\n\nimport {APIProviderContext} from '../components/api-provider';\nimport {useApiIsLoaded} from './use-api-is-loaded';\n\ninterface ApiLibraries {\n  core: google.maps.CoreLibrary;\n  maps: google.maps.MapsLibrary;\n  places: google.maps.PlacesLibrary;\n  geocoding: google.maps.GeocodingLibrary;\n  routes: google.maps.RoutesLibrary;\n  marker: google.maps.MarkerLibrary;\n  geometry: google.maps.GeometryLibrary;\n  elevation: google.maps.ElevationLibrary;\n  streetView: google.maps.StreetViewLibrary;\n  journeySharing: google.maps.JourneySharingLibrary;\n  drawing: google.maps.DrawingLibrary;\n  visualization: google.maps.VisualizationLibrary;\n}\n\nexport function useMapsLibrary<\n  K extends keyof ApiLibraries,\n  V extends ApiLibraries[K]\n>(name: K): V | null;\n\nexport function useMapsLibrary(name: string) {\n  const apiIsLoaded = useApiIsLoaded();\n  const ctx = useContext(APIProviderContext);\n\n  useEffect(() => {\n    if (!apiIsLoaded || !ctx) return;\n\n    // Trigger loading the libraries via our proxy-method.\n    // The returned promise is ignored, since importLibrary will update loadedLibraries\n    // list in the context, triggering a re-render.\n    void ctx.importLibrary(name);\n  }, [apiIsLoaded, ctx?.importLibrary]);\n\n  return ctx?.loadedLibraries[name] || null;\n}\n","/* eslint-disable complexity */\nimport React, {\n  Children,\n  forwardRef,\n  useCallback,\n  useContext,\n  useEffect,\n  useImperativeHandle,\n  useState\n} from 'react';\n\nimport {createPortal} from 'react-dom';\nimport {GoogleMapsContext} from './map';\n\nimport type {Ref, PropsWithChildren} from 'react';\nimport {useMapsLibrary} from '../hooks/use-maps-library';\n\nexport interface AdvancedMarkerContextValue {\n  marker: google.maps.marker.AdvancedMarkerElement;\n}\n\nexport const AdvancedMarkerContext =\n  React.createContext<AdvancedMarkerContextValue | null>(null);\n\ntype AdvancedMarkerEventProps = {\n  onClick?: (e: google.maps.MapMouseEvent) => void;\n  onDrag?: (e: google.maps.MapMouseEvent) => void;\n  onDragStart?: (e: google.maps.MapMouseEvent) => void;\n  onDragEnd?: (e: google.maps.MapMouseEvent) => void;\n};\n\nexport type AdvancedMarkerProps = PropsWithChildren<\n  Omit<google.maps.marker.AdvancedMarkerElementOptions, 'gmpDraggable'> &\n    AdvancedMarkerEventProps & {\n      /**\n       * className to add a class to the advanced marker element\n       * Can only be used with HTML Marker content\n       */\n      className?: string;\n      draggable?: boolean;\n    }\n>;\n\nexport type AdvancedMarkerRef = google.maps.marker.AdvancedMarkerElement | null;\nfunction useAdvancedMarker(props: AdvancedMarkerProps) {\n  const [marker, setMarker] =\n    useState<google.maps.marker.AdvancedMarkerElement | null>(null);\n  const [contentContainer, setContentContainer] =\n    useState<HTMLDivElement | null>(null);\n\n  const map = useContext(GoogleMapsContext)?.map;\n  const markerLibrary = useMapsLibrary('marker');\n\n  const {\n    children,\n    className,\n    onClick,\n    onDrag,\n    onDragStart,\n    onDragEnd,\n    collisionBehavior,\n    draggable,\n    position,\n    title,\n    zIndex\n  } = props;\n\n  const numChilds = Children.count(children);\n\n  // create marker instance and add it to the map when map becomes available\n  useEffect(() => {\n    if (!map || !markerLibrary) return;\n\n    const newMarker = new markerLibrary.AdvancedMarkerElement();\n    newMarker.map = map;\n\n    setMarker(newMarker);\n\n    // create container for marker content if there are children\n    if (numChilds > 0) {\n      const el = document.createElement('div');\n      if (className) el.className = className;\n\n      newMarker.content = el;\n\n      setContentContainer(el);\n    }\n\n    return () => {\n      newMarker.map = null;\n      setMarker(null);\n      setContentContainer(null);\n    };\n  }, [map, markerLibrary, numChilds]);\n\n  // bind all marker events\n  useEffect(() => {\n    if (!marker) return;\n\n    const m = marker;\n\n    if (onClick) marker.addListener('click', onClick);\n    if (onDrag) marker.addListener('drag', onDrag);\n    if (onDragStart) marker.addListener('dragstart', onDragStart);\n    if (onDragEnd) marker.addListener('dragend', onDragEnd);\n\n    if ((onDrag || onDragStart || onDragEnd) && !draggable) {\n      console.warn(\n        'You need to set the marker to draggable to listen to drag-events.'\n      );\n    }\n\n    return () => {\n      google.maps.event.clearInstanceListeners(m);\n    };\n  }, [marker, draggable, onClick, onDragStart, onDrag, onDragEnd]);\n\n  // update other marker props when changed\n  useEffect(() => {\n    if (!marker) return;\n\n    if (position !== undefined) marker.position = position;\n    if (draggable !== undefined) marker.gmpDraggable = draggable;\n    if (collisionBehavior !== undefined)\n      marker.collisionBehavior = collisionBehavior;\n    if (zIndex !== undefined) marker.zIndex = zIndex;\n    if (typeof title === 'string') marker.title = title;\n  }, [marker, position, draggable, collisionBehavior, zIndex, title]);\n\n  return [marker, contentContainer] as const;\n}\n\nexport const AdvancedMarker = forwardRef(\n  (props: AdvancedMarkerProps, ref: Ref<AdvancedMarkerRef>) => {\n    const {children} = props;\n    const [marker, contentContainer] = useAdvancedMarker(props);\n\n    useImperativeHandle(ref, () => marker, [marker]);\n\n    if (!marker) {\n      return null;\n    }\n\n    return (\n      <AdvancedMarkerContext.Provider value={{marker}}>\n        {contentContainer !== null && createPortal(children, contentContainer)}\n      </AdvancedMarkerContext.Provider>\n    );\n  }\n);\n\nexport function useAdvancedMarkerRef() {\n  const [marker, setMarker] =\n    useState<google.maps.marker.AdvancedMarkerElement | null>(null);\n\n  const refCallback = useCallback((m: AdvancedMarkerRef | null) => {\n    setMarker(m);\n  }, []);\n\n  return [refCallback, marker] as const;\n}\n","/* eslint-disable complexity */\nimport React, {PropsWithChildren, useContext, useEffect, useState} from 'react';\nimport {createPortal} from 'react-dom';\n\nimport {GoogleMapsContext} from './map';\n\n/**\n * Props for the Info Window Component\n */\nexport type InfoWindowProps = google.maps.InfoWindowOptions & {\n  onCloseClick?: () => void;\n  anchor?: google.maps.Marker | google.maps.marker.AdvancedMarkerElement | null;\n};\n\n/**\n * Component to render a Google Maps Info Window\n */\nexport const InfoWindow = (props: PropsWithChildren<InfoWindowProps>) => {\n  const {children, anchor, onCloseClick, ...infoWindowOptions} = props;\n  const map = useContext(GoogleMapsContext)?.map;\n\n  const [contentContainer, setContentContainer] =\n    useState<HTMLDivElement | null>(null);\n\n  // create infowindow once map is available\n  useEffect(() => {\n    if (!map) return;\n\n    const infoWindow = new google.maps.InfoWindow(infoWindowOptions);\n\n    // Add content to info window\n    const el = document.createElement('div');\n    infoWindow.setContent(el);\n    infoWindow.open({map, anchor});\n\n    if (onCloseClick) {\n      infoWindow.addListener('closeclick', () => {\n        onCloseClick();\n      });\n    }\n\n    setContentContainer(el);\n\n    // Cleanup info window and event listeners on unmount\n    return () => {\n      google.maps.event.clearInstanceListeners(infoWindow);\n\n      infoWindow.close();\n      el.remove();\n\n      setContentContainer(null);\n    };\n  }, [map, children, anchor]);\n\n  return (\n    <>{contentContainer !== null && createPortal(children, contentContainer)}</>\n  );\n};\n","import {useContext} from 'react';\n\nimport {APIProviderContext} from '../components/api-provider';\nimport {GoogleMapsContext} from '../components/map';\nimport {logErrorOnce} from '../libraries/errors';\n\n/**\n * Retrieves a map-instance from the context. This is either an instance\n * identified by id or the parent map instance if no id is specified.\n * Returns null if neither can be found.\n */\nexport const useMap = (id: string | null = null): google.maps.Map | null => {\n  const ctx = useContext(APIProviderContext);\n  const {map} = useContext(GoogleMapsContext) || {};\n\n  if (ctx === null) {\n    logErrorOnce(\n      'useMap(): failed to retrieve APIProviderContext. ' +\n        'Make sure that the <APIProvider> component exists and that the ' +\n        'component you are calling `useMap()` from is a sibling of the ' +\n        '<APIProvider>.'\n    );\n\n    return null;\n  }\n\n  const {mapInstances} = ctx;\n\n  // if an id is specified, the corresponding map or null is returned\n  if (id !== null) return mapInstances[id] || null;\n\n  // otherwise, return the closest ancestor\n  if (map) return map;\n\n  // finally, return the default map instance\n  return mapInstances['default'] || null;\n};\n","import {useEffect, useMemo} from 'react';\nimport {createPortal} from 'react-dom';\nimport {useMap} from '../hooks/use-map';\n\nimport type {PropsWithChildren} from 'react';\n\ntype MapControlProps = PropsWithChildren<{\n  position: ControlPosition;\n}>;\n\n/**\n * Copy of the `google.maps.ControlPosition` constants.\n * They have to be duplicated here since we can't wait for the maps API to load to be able to use them.\n */\nexport const ControlPosition = {\n  TOP_LEFT: 1,\n  TOP_CENTER: 2,\n  TOP: 2,\n  TOP_RIGHT: 3,\n  LEFT_CENTER: 4,\n  LEFT_TOP: 5,\n  LEFT: 5,\n  LEFT_BOTTOM: 6,\n  RIGHT_TOP: 7,\n  RIGHT: 7,\n  RIGHT_CENTER: 8,\n  RIGHT_BOTTOM: 9,\n  BOTTOM_LEFT: 10,\n  BOTTOM_CENTER: 11,\n  BOTTOM: 11,\n  BOTTOM_RIGHT: 12,\n  CENTER: 13,\n  BLOCK_START_INLINE_START: 14,\n  BLOCK_START_INLINE_CENTER: 15,\n  BLOCK_START_INLINE_END: 16,\n  INLINE_START_BLOCK_CENTER: 17,\n  INLINE_START_BLOCK_START: 18,\n  INLINE_START_BLOCK_END: 19,\n  INLINE_END_BLOCK_START: 20,\n  INLINE_END_BLOCK_CENTER: 21,\n  INLINE_END_BLOCK_END: 22,\n  BLOCK_END_INLINE_START: 23,\n  BLOCK_END_INLINE_CENTER: 24,\n  BLOCK_END_INLINE_END: 25\n} as const;\nexport type ControlPosition =\n  (typeof ControlPosition)[keyof typeof ControlPosition];\n\nexport const MapControl = ({children, position}: MapControlProps) => {\n  const controlContainer = useMemo(() => document.createElement('div'), []);\n  const map = useMap();\n\n  useEffect(() => {\n    if (!map) return;\n\n    const controls = map.controls[position];\n\n    controls.push(controlContainer);\n\n    return () => {\n      const index = controls.getArray().indexOf(controlContainer);\n      controls.removeAt(index);\n    };\n  }, [map, position]);\n\n  return createPortal(children, controlContainer);\n};\n","/* eslint-disable complexity */\nimport React, {\n  forwardRef,\n  useCallback,\n  useContext,\n  useEffect,\n  useImperativeHandle,\n  useState\n} from 'react';\n\nimport {GoogleMapsContext} from './map';\n\nimport type {Ref} from 'react';\n\ntype MarkerEventProps = {\n  onClick?: (e: google.maps.MapMouseEvent) => void;\n  onDrag?: (e: google.maps.MapMouseEvent) => void;\n  onDragStart?: (e: google.maps.MapMouseEvent) => void;\n  onDragEnd?: (e: google.maps.MapMouseEvent) => void;\n  onMouseOver?: (e: google.maps.MapMouseEvent) => void;\n  onMouseOut?: (e: google.maps.MapMouseEvent) => void;\n};\n\nexport type MarkerProps = google.maps.MarkerOptions & MarkerEventProps;\n\nexport type MarkerRef = Ref<google.maps.Marker | null>;\n\nfunction useMarker(props: MarkerProps) {\n  const [marker, setMarker] = useState<google.maps.Marker | null>(null);\n  const map = useContext(GoogleMapsContext)?.map;\n\n  const {\n    onClick,\n    onDrag,\n    onDragStart,\n    onDragEnd,\n    onMouseOver,\n    onMouseOut,\n    ...markerOptions\n  } = props;\n\n  const {position, draggable} = markerOptions;\n\n  // create marker instance and add to the map once the map is available\n  useEffect(() => {\n    if (!map) {\n      if (map === undefined)\n        console.error('<Marker> has to be inside a Map component.');\n\n      return;\n    }\n\n    const newMarker = new google.maps.Marker(markerOptions);\n    newMarker.setMap(map);\n    setMarker(newMarker);\n\n    return () => {\n      newMarker.setMap(null);\n      setMarker(null);\n    };\n  }, [map]);\n\n  // attach and re-attach event-handlers when any of the properties change\n  useEffect(() => {\n    if (!marker) return;\n\n    const m = marker;\n\n    // Add event listeners\n    if (onClick) m.addListener('click', onClick);\n    if (onDrag) m.addListener('drag', onDrag);\n    if (onDragStart) m.addListener('dragstart', onDragStart);\n    if (onDragEnd) m.addListener('dragend', onDragEnd);\n    if (onMouseOver) m.addListener('mouseover', onMouseOver);\n    if (onMouseOut) m.addListener('mouseout', onMouseOut);\n\n    marker.setDraggable(Boolean(draggable));\n\n    return () => {\n      google.maps.event.clearInstanceListeners(m);\n    };\n  }, [\n    marker,\n    draggable,\n    onClick,\n    onDrag,\n    onDragStart,\n    onDragEnd,\n    onMouseOver,\n    onMouseOut\n  ]);\n\n  // update markerOptions (note the dependencies aren't properly checked\n  // here, we just assume that setOptions is smart enough to not waste a\n  // lot of time updating values that didn't change)\n  useEffect(() => {\n    if (!marker) return;\n    if (markerOptions) marker.setOptions(markerOptions);\n  }, [marker, markerOptions]);\n\n  // update position when changed\n  useEffect(() => {\n    // Should not update position when draggable\n    if (draggable || !position || !marker) return;\n\n    marker.setPosition(position);\n  }, [draggable, position, marker]);\n\n  return marker;\n}\n\n/**\n * Component to render a Google Maps Marker on a map\n */\nexport const Marker = forwardRef((props: MarkerProps, ref: MarkerRef) => {\n  const marker = useMarker(props);\n\n  useImperativeHandle(ref, () => marker, [marker]);\n\n  return <></>;\n});\n\nexport function useMarkerRef() {\n  const [marker, setMarker] = useState<google.maps.Marker | null>(null);\n\n  const refCallback = useCallback((m: google.maps.Marker | null) => {\n    setMarker(m);\n  }, []);\n\n  return [refCallback, marker] as const;\n}\n","import {\n  Children,\n  PropsWithChildren,\n  useContext,\n  useEffect,\n  useMemo\n} from 'react';\nimport {AdvancedMarkerContext} from './advanced-marker';\nimport {createPortal} from 'react-dom';\nimport {logErrorOnce} from '../libraries/errors';\n\n/**\n * Props for the Pin component\n */\nexport type PinProps = google.maps.marker.PinElementOptions;\n\n/**\n * Component to render a google maps marker Pin View\n */\nexport const Pin = (props: PropsWithChildren<PinProps>) => {\n  const advancedMarker = useContext(AdvancedMarkerContext)?.marker;\n  const glyphContainer = useMemo(() => document.createElement('div'), []);\n\n  // Create Pin View instance\n  useEffect(() => {\n    if (!advancedMarker) {\n      if (advancedMarker === undefined) {\n        console.error(\n          'The <Pin> component can only be used inside <AdvancedMarker>.'\n        );\n      }\n\n      return;\n    }\n\n    if (props.glyph && props.children) {\n      logErrorOnce(\n        'The <Pin> component only uses children to render the glyph if both the glyph property and children are present.'\n      );\n    }\n\n    if (Children.count(props.children) > 1) {\n      logErrorOnce(\n        'Passing multiple children to the <Pin> component might lead to unexpected results.'\n      );\n    }\n\n    const pinViewOptions: google.maps.marker.PinElementOptions = {\n      ...props\n    };\n\n    const pinElement = new google.maps.marker.PinElement(pinViewOptions);\n\n    // Set glyph to glyph container if children are present (rendered via portal).\n    // If both props.glyph and props.children are present, props.children takes priority.\n    if (props.children) {\n      pinElement.glyph = glyphContainer;\n    }\n\n    // Set content of Advanced Marker View to the Pin View element\n    advancedMarker.content = pinElement.element;\n  }, [advancedMarker, props]);\n\n  return createPortal(props.children, glyphContainer);\n};\n","import {useState, useRef, useEffect} from 'react';\n\nimport {useApiIsLoaded} from './use-api-is-loaded';\n\nexport interface AutocompleteProps {\n  inputField: HTMLInputElement | null;\n  options?: google.maps.places.AutocompleteOptions;\n  onPlaceChanged: (place: google.maps.places.PlaceResult) => void;\n}\n\n/**\n * Hook to get a Google Maps Places Autocomplete instance\n * monitoring an input field\n */\nexport const useAutocomplete = (\n  props: AutocompleteProps\n): google.maps.places.Autocomplete | null => {\n  const {inputField, options, onPlaceChanged} = props;\n\n  const googleMapsAPIIsLoaded = useApiIsLoaded();\n\n  const placeChangedHandler = useRef(onPlaceChanged);\n\n  const [autocomplete, setAutocomplete] =\n    useState<google.maps.places.Autocomplete | null>(null);\n\n  // Initializes the Google Maps Places Autocomplete\n  useEffect(() => {\n    // Wait for the Google Maps API and input element to be initialized\n    if (!googleMapsAPIIsLoaded || !inputField) return;\n\n    // FIXME: add dynamic loading for required libraries\n    if (!google.maps.places) {\n      console.error(\n        'Google Maps Places library is missing. ' +\n          'Please add the places library to the props of the <ApiProvider> ' +\n          'component.'\n      );\n\n      return;\n    }\n\n    // Create Autocomplete instance\n    const autocompleteInstance = new google.maps.places.Autocomplete(\n      inputField,\n      options\n    );\n\n    setAutocomplete(autocompleteInstance);\n\n    // Add places change listener to Autocomplete\n    autocompleteInstance.addListener('place_changed', () => {\n      const place = autocompleteInstance.getPlace();\n      if (placeChangedHandler.current) placeChangedHandler.current(place);\n    });\n\n    // Clear listeners on unmount\n    return () => {\n      if (autocompleteInstance && typeof google.maps === 'object') {\n        google.maps.event.clearInstanceListeners(autocompleteInstance);\n      }\n    };\n  }, [googleMapsAPIIsLoaded, inputField, options]);\n\n  return autocomplete;\n};\n","/**\n * A typescript assertion function used in cases where typescript has to be\n * convinced that the object in question can not be null.\n *\n * @param value\n * @param message\n */\nexport function assertNotNull<TValue>(\n  value: TValue,\n  message = 'assertion failed'\n): asserts value is NonNullable<TValue> {\n  if (value === null || value === undefined) {\n    throw Error(message);\n  }\n}\n","import {useMemo, useEffect, useCallback} from 'react';\n\nimport {useApiIsLoaded} from './use-api-is-loaded';\nimport {useMap} from './use-map';\nimport {assertNotNull} from '../libraries/assert-not-null';\n\nexport interface DirectionsServiceHookOptions {\n  mapId?: string;\n  renderOnMap?: boolean;\n  renderOptions?: google.maps.DirectionsRendererOptions;\n}\n\ninterface DirectionsServiceHookReturns {\n  directionsService: google.maps.DirectionsService | null;\n  directionsRenderer: google.maps.DirectionsRenderer | null;\n  renderRoute:\n    | ((\n        request: google.maps.DirectionsRequest\n      ) => Promise<google.maps.DirectionsResult>)\n    | null;\n  setRenderedRouteIndex: ((index: number) => void) | null;\n}\n\nconst useDirectionsRenderer = (\n  mapId: string | null,\n  renderOnMap?: boolean,\n  renderOptions?: google.maps.DirectionsRendererOptions\n) => {\n  const map = useMap(mapId);\n\n  // create the renderer instance\n  const directionsRenderer = useMemo(\n    () => {\n      if (!map || !renderOnMap) return null;\n\n      const renderer = new google.maps.DirectionsRenderer(renderOptions);\n      renderer.setMap(map);\n\n      return renderer;\n    },\n    // note: no dependency on renderOptions since those are handled in the\n    // next effect.\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    [map, renderOnMap]\n  );\n\n  useEffect(\n    () => {\n      if (!directionsRenderer) return;\n\n      directionsRenderer.setOptions(renderOptions || {});\n    },\n    // note: directionsRenderer dependency isn't needed since the\n    // renderOptions will be set on initialization when creating the renderer.\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    [renderOptions]\n  );\n\n  return directionsRenderer;\n};\n\n/**\n * Hook to get Google Maps Places Directions Service instance\n */\nexport const useDirectionsService = (\n  props: DirectionsServiceHookOptions = {}\n): DirectionsServiceHookReturns => {\n  const {mapId = null, renderOnMap, renderOptions} = props;\n  const isApiLoaded = useApiIsLoaded();\n\n  // Creates a Directions Service instance\n  const directionsService = useMemo(() => {\n    // Wait for Google Maps API to be loaded\n    if (!isApiLoaded) return null;\n\n    return new google.maps.DirectionsService();\n  }, [isApiLoaded]);\n\n  // create the renderer instance\n  const directionsRenderer = useDirectionsRenderer(\n    mapId,\n    renderOnMap,\n    renderOptions\n  );\n\n  // Custom Directions route request followed by directions rendering\n  const renderRoute = useCallback(\n    async (\n      request: google.maps.DirectionsRequest\n    ): Promise<google.maps.DirectionsResult> => {\n      // findAndRenderRoute() isn't callable when either directions\n      // service or renderer aren't ready\n      assertNotNull(directionsService);\n      assertNotNull(directionsRenderer);\n\n      const result = await directionsService.route(request);\n      directionsRenderer.setDirections(result);\n\n      return result;\n    },\n    [directionsService, directionsRenderer]\n  );\n\n  // Renders directions route of given index\n  const setRenderedRouteIndex = (index: number) => {\n    assertNotNull(directionsRenderer);\n\n    directionsRenderer.setRouteIndex(index);\n  };\n\n  return {\n    directionsService,\n    directionsRenderer,\n    renderRoute: directionsService && directionsRenderer ? renderRoute : null,\n    setRenderedRouteIndex:\n      directionsService && directionsRenderer ? setRenderedRouteIndex : null\n  };\n};\n","/* eslint-disable complexity */\nimport {useEffect, useState} from 'react';\nimport {useApiIsLoaded} from './use-api-is-loaded';\nimport {useMap} from './use-map';\n\nexport interface StreetViewPanoramaProps {\n  mapId?: string;\n  divElement?: HTMLElement | null;\n  position?: google.maps.LatLng | google.maps.LatLngLiteral;\n  pov?: google.maps.StreetViewPov;\n  zoom?: number;\n}\n\n/**\n * Hook to get Street View Panorama\n */\nexport const useStreetViewPanorama = (\n  props: StreetViewPanoramaProps = {}\n): google.maps.StreetViewPanorama | null => {\n  const {mapId, divElement, position, pov, zoom} = props;\n  const googleMapsAPIIsLoaded = useApiIsLoaded();\n  const map = useMap(mapId);\n\n  const [streetViewPanorama, setStreetViewPanorama] =\n    useState<google.maps.StreetViewPanorama | null>(null);\n\n  // Creates a Street View instance\n  useEffect(\n    () => {\n      if (!googleMapsAPIIsLoaded) return;\n\n      let pano: google.maps.StreetViewPanorama | null = null;\n      if (divElement) {\n        pano = new google.maps.StreetViewPanorama(divElement);\n      } else if (map) {\n        pano = map.getStreetView();\n      }\n\n      setStreetViewPanorama(pano);\n\n      if (!pano) return;\n      if (pov) pano.setPov(pov);\n      if (position) pano.setPosition(position);\n      if (zoom || zoom === 0) pano.setZoom(zoom);\n\n      return (): void => {\n        setStreetViewPanorama(null);\n\n        if (map) map.setStreetView(null);\n      };\n    },\n    // fixme: implement extra hook to update FOV when props change\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    [googleMapsAPIIsLoaded, map, divElement]\n  );\n\n  return streetViewPanorama;\n};\n","const mapLinear = (x: number, a1: number, a2: number, b1: number, b2: number) =>\n  b1 + ((x - a1) * (b2 - b1)) / (a2 - a1);\n\nconst getMapMaxTilt = (zoom: number) => {\n  if (zoom <= 10) {\n    return 30;\n  }\n  if (zoom >= 15.5) {\n    return 67.5;\n  }\n\n  // range [10...14]\n  if (zoom <= 14) {\n    return mapLinear(zoom, 10, 14, 30, 45);\n  }\n\n  // range [14...15.5]\n  return mapLinear(zoom, 14, 15.5, 45, 67.5);\n};\n\n/**\n * Function to limit the tilt range of the google maps map when updating the view state\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport const limitTiltRange = ({viewState}: any) => {\n  const pitch = viewState.pitch;\n  const gmZoom = viewState.zoom + 1;\n  const maxTilt = getMapMaxTilt(gmZoom);\n\n  return {...viewState, fovy: 25, pitch: Math.min(maxTilt, pitch)};\n};\n"],"names":["MAPS_API_BASE_URL","GoogleMapsApiLoader","load","params","_window$google","libraries","split","serializedParams","serializeParams","window","google","maps","importLibrary","__googleMapsApiParams__","initImportLibrary","console","warn","lib","v","key","language","region","authReferrerPolicy","solutionChannel","join","apiPromise","loadApi","library","Promise","resolve","reject","_document$querySelect","scriptElement","document","createElement","urlParams","URLSearchParams","value","Object","entries","urlParamName","replace","t","toLowerCase","set","src","toString","__googleMapsCallback__","onerror","Error","nonce","querySelector","head","append","libraryName","then","APILoadingStatus","NOT_LOADED","LOADING","LOADED","FAILED","APIProviderContext","React","createContext","useMapInstances","mapInstances","setMapInstances","useState","addMapInstance","mapInstance","id","instances","_extends","removeMapInstance","_ref","remaining","_objectWithoutPropertiesLoose","map","_toPropertyKey","clearMapInstances","useGoogleMapsApiLoader","props","onLoad","apiKey","otherApiParams","_excluded","status","setStatus","loadedLibraries","addLoadedLibrary","useReducer","action","name","librariesString","useMemo","JSON","stringify","useCallback","_google","res","useEffect","error","APIProvider","children","loaderProps","_excluded2","Provider","useApiLoadingStatus","_useContext","useContext","useApiIsLoaded","shownMessages","Set","logErrorOnce","args","has","add","useCallbackRef","el","setEl","ref","useInternalCameraState","useRef","center","lat","lng","heading","tilt","zoom","trackDispatchedEvent","ev","cameraStateRef","cameraEvent","detail","current","useMapEvents","propName","eventPropNames","handler","eventType","propNameToEventType","listener","addListener","mapEvent","createMapEvent","remove","type","srcEvent","stoppable","stop","cameraEventTypes","includes","camEvent","getCenter","getZoom","getHeading","getTilt","bounds","getBounds","Number","isFinite","toJSON","north","east","south","west","mouseEventTypes","_srcEvent$latLng","mouseEvent","domEvent","latLng","placeId","onBoundsChanged","onCenterChanged","onClick","onContextmenu","onDblclick","onDrag","onDragend","onDragstart","onHeadingChanged","onIdle","onIsFractionalZoomEnabledChanged","onMapCapabilitiesChanged","onMapTypeIdChanged","onMousemove","onMouseout","onMouseover","onProjectionChanged","onRenderingTypeChanged","onTilesLoaded","onTiltChanged","onZoomChanged","keys","isLatLngLiteral","obj","useMapOptions","mapProps","rawCenter","mapOptions","opts","setOptions","useLayoutEffect","moveCamera","useDeckGLCameraUpdate","viewState","gestureHandling","keyboardShortcuts","disableDefaultUI","latitude","longitude","bearing","pitch","GoogleMapsContext","Map","className","style","viewport","context","mapRef","useMapInstance","isViewportSet","Boolean","combinedStyle","width","height","zIndex","undefined","deckGLViewProps","apiIsLoaded","setMap","container","containerRef","initialBounds","newMap","fitBounds","event","clearInstanceListeners","mapId","useMapsLibrary","ctx","AdvancedMarkerContext","useAdvancedMarker","marker","setMarker","contentContainer","setContentContainer","markerLibrary","onDragStart","onDragEnd","collisionBehavior","draggable","position","title","numChilds","Children","count","newMarker","AdvancedMarkerElement","content","m","gmpDraggable","AdvancedMarker","forwardRef","useImperativeHandle","createPortal","useAdvancedMarkerRef","refCallback","InfoWindow","anchor","onCloseClick","infoWindowOptions","infoWindow","setContent","open","close","Fragment","useMap","ControlPosition","TOP_LEFT","TOP_CENTER","TOP","TOP_RIGHT","LEFT_CENTER","LEFT_TOP","LEFT","LEFT_BOTTOM","RIGHT_TOP","RIGHT","RIGHT_CENTER","RIGHT_BOTTOM","BOTTOM_LEFT","BOTTOM_CENTER","BOTTOM","BOTTOM_RIGHT","CENTER","BLOCK_START_INLINE_START","BLOCK_START_INLINE_CENTER","BLOCK_START_INLINE_END","INLINE_START_BLOCK_CENTER","INLINE_START_BLOCK_START","INLINE_START_BLOCK_END","INLINE_END_BLOCK_START","INLINE_END_BLOCK_CENTER","INLINE_END_BLOCK_END","BLOCK_END_INLINE_START","BLOCK_END_INLINE_CENTER","BLOCK_END_INLINE_END","MapControl","controlContainer","controls","push","index","getArray","indexOf","removeAt","useMarker","onMouseOver","onMouseOut","markerOptions","Marker","setDraggable","setPosition","useMarkerRef","Pin","advancedMarker","glyphContainer","glyph","pinViewOptions","pinElement","PinElement","element","useAutocomplete","inputField","options","onPlaceChanged","googleMapsAPIIsLoaded","placeChangedHandler","autocomplete","setAutocomplete","places","autocompleteInstance","Autocomplete","place","getPlace","assertNotNull","message","useDirectionsRenderer","renderOnMap","renderOptions","directionsRenderer","renderer","DirectionsRenderer","useDirectionsService","isApiLoaded","directionsService","DirectionsService","renderRoute","request","result","route","setDirections","setRenderedRouteIndex","setRouteIndex","useStreetViewPanorama","divElement","pov","streetViewPanorama","setStreetViewPanorama","pano","StreetViewPanorama","getStreetView","setPov","setZoom","setStreetView","mapLinear","x","a1","a2","b1","b2","getMapMaxTilt","limitTiltRange","gmZoom","maxTilt","fovy","Math","min"],"mappings":"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"}